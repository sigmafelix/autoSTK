% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoKrigeST.cv.R
\name{autoKrigeST.cv}
\alias{autoKrigeST.cv}
\title{Cross-validation of spatiotemporal Kriging}
\usage{
autoKrigeST.cv(
  data,
  fold_dim,
  nfold = 10L,
  formula,
  type_stv = "sumMetric",
  block = 0,
  model = c("Sph", "Exp", "Gau", "Ste"),
  kappa = c(0.05, seq(0.2, 2, 0.1), 5, 10),
  fix.values = c(NA, NA, NA),
  tlags = 0:6,
  cutoff = 20000,
  width = 500,
  aniso_method = "vgm",
  type_joint = "Exp",
  prodsum_k = 0.25,
  surface = FALSE,
  start_vals = c(NA, NA, NA),
  miscFitOptions = list(),
  measurement_error = c(0, 0, 0),
  cores = 1,
  seed = 130425L
)
}
\arguments{
\item{data}{a `ST*DF`-class object}

\item{fold_dim}{character. the dimension at which you want to cross-validate (spatial, temporal, and random)}

\item{nfold}{integer. the number of folds. 10 as the default.}
}
\value{
The cross-validated spatiotemporal Kriging results.
}
\description{
Cross-validation of spatiotemporal Kriging
}
\examples{
data(air)
deair = STFDF(stations, dates, data.frame(PM10 = as.vector(air)))
deair_sf = st_as_stars(deair) \%>\%
    st_transform('+proj=longlat +ellps=sphere')
deair_sf = st_transform(deair_sf, 3857)
deair_r = as(deair_sf, 'STFDF')
deair_r@sp@proj4string = CRS('+init=epsg:3857')
deair_rs = deair_r[,3751:3800]
## autoKrigeST.cv test
akst_cv_t = autoKrigeST.cv(formula  PM10~1, data = deair_rs,  nfold = 3, fold_dim = 'temporal', 
                         cutoff = 300000, width = 30000, tlags = 0:7, cores = 8)
akst_cv_s = autoKrigeST.cv(formula = PM10~1, data = deair_rs,  nfold = 3, fold_dim = 'spatial', 
                         cutoff = 300000, width = 30000, tlags = 0:7, cores = 8)
akst_cv_r = autoKrigeST.cv(formula = PM10~1, data = deair_rs,  nfold = 3, fold_dim = 'random', 
                          cutoff = 300000, width = 30000, tlags = 0:7, cores = 8)
akst_cv_spt = autoKrigeST.cv(formula = PM10~1, data = deair_rs,  nfold = 4, fold_dim = 'spacetime', 
                         cutoff = 300000, width = 30000, tlags = 0:7, cores = 8)
}
